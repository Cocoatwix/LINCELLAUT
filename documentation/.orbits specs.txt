A .orbits file contains the orbits of all possible vectors under some modulus under some given matrix. Currently, the .orbits files are designed for use with 2 by 2 matrix systems, though they should scale up nicely to systems of higher dimension. 

At its core, a .orbits file is just a collection of vector lists. Each list is separated by a dash (-). Every line in the list represents another vector (written as row vectors for easier viewing and processing, unlike .matrix files which uses column vectors). Each entry in a vector is separated by spaces.

Each subsequent vector in the list represents the next vector in the orbit. For instance, consider the following list:

0 3
0 6
0 4
0 0

This list represents an orbit under the matrix (in .matrix format):

2 2
2 0
0 2

This matrix scales a vector by a factor of 2. The list above uses a modulus of 8. So, starting with the vector <0, 3>, scaling up by a factor of 2 gives the vector <0, 6>. Scaling up again would give <0, 12>, but since we're considering vectors mod 8, we instead see the next vector is <0, 4>. Scaling up again gives <0, 8> which is congruent to <0, 0> mod 8. <0, 0> scaled would give <0, 0>, so no more vectors are listed. 

In practice, the reason why <0, 0> would be the last vector in an orbit is because <0, 0> would already have its orbit listed earlier in the file, so to save space, the .orbits file forces the user to reconstruct the full orbits using orbits provided earlier in the file. This has the effect of making orbit lists appear smaller and smaller as the file progresses, since more and more vectors will have already had their orbits computed.

A .orbits file is simply a collection of many such orbit lists, separated with dashes, like so:

0 0
-
0 2
0 4
0 0
-
0 4
-

Note that a .orbits file does not list vector orbits in any specific order. Internally, the program generates orbits with no transient regions first in an attempt to minimise later orbits. As a result, the orbits aren't generated in any particular order. In some cases (such as with 2 by 2 matrices), a separate file can be created which keeps track of the line numbers where each vector's orbit is listed. In general, though, the user of a .orbits file will have to iterate a vector by the appropriate matrix at most once and then match the resulting vector with one listed in the file. A .orbitsloc file is created alongside the .orbits file to help users find the orbits they're looking for (see documentation on .orbitsloc files).